{"ast":null,"code":"import * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport { populateInstance } from '../../useTreeView/useTreeView.utils';\nexport const useTreeViewId = _ref => {\n  let {\n    instance,\n    params\n  } = _ref;\n  const treeId = useId(params.id);\n  const getTreeItemId = React.useCallback((itemId, idAttribute) => idAttribute !== null && idAttribute !== void 0 ? idAttribute : \"\".concat(treeId, \"-\").concat(itemId), [treeId]);\n  populateInstance(instance, {\n    getTreeItemId\n  });\n  return {\n    getRootProps: () => ({\n      id: treeId\n    })\n  };\n};\nuseTreeViewId.params = {\n  id: true\n};","map":{"version":3,"names":["React","useId","populateInstance","useTreeViewId","_ref","instance","params","treeId","id","getTreeItemId","useCallback","itemId","idAttribute","concat","getRootProps"],"sources":["/Users/xander/node_modules/@mui/x-tree-view/internals/plugins/useTreeViewId/useTreeViewId.js"],"sourcesContent":["import * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport { populateInstance } from '../../useTreeView/useTreeView.utils';\nexport const useTreeViewId = ({\n  instance,\n  params\n}) => {\n  const treeId = useId(params.id);\n  const getTreeItemId = React.useCallback((itemId, idAttribute) => idAttribute ?? `${treeId}-${itemId}`, [treeId]);\n  populateInstance(instance, {\n    getTreeItemId\n  });\n  return {\n    getRootProps: () => ({\n      id: treeId\n    })\n  };\n};\nuseTreeViewId.params = {\n  id: true\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAGvB;EAAA,IAHwB;IAC5BC,QAAQ;IACRC;EACF,CAAC,GAAAF,IAAA;EACC,MAAMG,MAAM,GAAGN,KAAK,CAACK,MAAM,CAACE,EAAE,CAAC;EAC/B,MAAMC,aAAa,GAAGT,KAAK,CAACU,WAAW,CAAC,CAACC,MAAM,EAAEC,WAAW,KAAKA,WAAW,aAAXA,WAAW,cAAXA,WAAW,MAAAC,MAAA,CAAON,MAAM,OAAAM,MAAA,CAAIF,MAAM,CAAE,EAAE,CAACJ,MAAM,CAAC,CAAC;EAChHL,gBAAgB,CAACG,QAAQ,EAAE;IACzBI;EACF,CAAC,CAAC;EACF,OAAO;IACLK,YAAY,EAAEA,CAAA,MAAO;MACnBN,EAAE,EAAED;IACN,CAAC;EACH,CAAC;AACH,CAAC;AACDJ,aAAa,CAACG,MAAM,GAAG;EACrBE,EAAE,EAAE;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}