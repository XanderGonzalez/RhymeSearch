{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { populateInstance } from '../../useTreeView/useTreeView.utils';\nexport const useTreeViewExpansion = _ref => {\n  let {\n    instance,\n    params,\n    models\n  } = _ref;\n  const setExpandedItems = (event, value) => {\n    var _params$onExpandedIte;\n    (_params$onExpandedIte = params.onExpandedItemsChange) === null || _params$onExpandedIte === void 0 || _params$onExpandedIte.call(params, event, value);\n    models.expandedItems.setControlledValue(value);\n  };\n  const isNodeExpanded = React.useCallback(itemId => {\n    return Array.isArray(models.expandedItems.value) ? models.expandedItems.value.indexOf(itemId) !== -1 : false;\n  }, [models.expandedItems.value]);\n  const isNodeExpandable = React.useCallback(itemId => {\n    var _instance$getNode;\n    return !!((_instance$getNode = instance.getNode(itemId)) !== null && _instance$getNode !== void 0 && _instance$getNode.expandable);\n  }, [instance]);\n  const toggleNodeExpansion = useEventCallback((event, itemId) => {\n    if (itemId == null) {\n      return;\n    }\n    const isExpandedBefore = models.expandedItems.value.indexOf(itemId) !== -1;\n    let newExpanded;\n    if (isExpandedBefore) {\n      newExpanded = models.expandedItems.value.filter(id => id !== itemId);\n    } else {\n      newExpanded = [itemId].concat(models.expandedItems.value);\n    }\n    if (params.onItemExpansionToggle) {\n      params.onItemExpansionToggle(event, itemId, !isExpandedBefore);\n    }\n    setExpandedItems(event, newExpanded);\n  });\n  const expandAllSiblings = (event, itemId) => {\n    const node = instance.getNode(itemId);\n    const siblings = instance.getChildrenIds(node.parentId);\n    const diff = siblings.filter(child => instance.isNodeExpandable(child) && !instance.isNodeExpanded(child));\n    const newExpanded = models.expandedItems.value.concat(diff);\n    if (diff.length > 0) {\n      if (params.onItemExpansionToggle) {\n        diff.forEach(newlyExpandedItemId => {\n          params.onItemExpansionToggle(event, newlyExpandedItemId, true);\n        });\n      }\n      setExpandedItems(event, newExpanded);\n    }\n  };\n  populateInstance(instance, {\n    isNodeExpanded,\n    isNodeExpandable,\n    toggleNodeExpansion,\n    expandAllSiblings\n  });\n};\nuseTreeViewExpansion.models = {\n  expandedItems: {\n    getDefaultValue: params => params.defaultExpandedItems\n  }\n};\nconst DEFAULT_EXPANDED_NODES = [];\nuseTreeViewExpansion.getDefaultizedParams = params => {\n  var _params$defaultExpand;\n  return _extends({}, params, {\n    defaultExpandedItems: (_params$defaultExpand = params.defaultExpandedItems) !== null && _params$defaultExpand !== void 0 ? _params$defaultExpand : DEFAULT_EXPANDED_NODES\n  });\n};\nuseTreeViewExpansion.params = {\n  expandedItems: true,\n  defaultExpandedItems: true,\n  onExpandedItemsChange: true,\n  onItemExpansionToggle: true\n};","map":{"version":3,"names":["_extends","React","useEventCallback","populateInstance","useTreeViewExpansion","_ref","instance","params","models","setExpandedItems","event","value","_params$onExpandedIte","onExpandedItemsChange","call","expandedItems","setControlledValue","isNodeExpanded","useCallback","itemId","Array","isArray","indexOf","isNodeExpandable","_instance$getNode","getNode","expandable","toggleNodeExpansion","isExpandedBefore","newExpanded","filter","id","concat","onItemExpansionToggle","expandAllSiblings","node","siblings","getChildrenIds","parentId","diff","child","length","forEach","newlyExpandedItemId","getDefaultValue","defaultExpandedItems","DEFAULT_EXPANDED_NODES","getDefaultizedParams","_params$defaultExpand"],"sources":["/Users/xander/node_modules/@mui/x-tree-view/internals/plugins/useTreeViewExpansion/useTreeViewExpansion.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { populateInstance } from '../../useTreeView/useTreeView.utils';\nexport const useTreeViewExpansion = ({\n  instance,\n  params,\n  models\n}) => {\n  const setExpandedItems = (event, value) => {\n    params.onExpandedItemsChange?.(event, value);\n    models.expandedItems.setControlledValue(value);\n  };\n  const isNodeExpanded = React.useCallback(itemId => {\n    return Array.isArray(models.expandedItems.value) ? models.expandedItems.value.indexOf(itemId) !== -1 : false;\n  }, [models.expandedItems.value]);\n  const isNodeExpandable = React.useCallback(itemId => !!instance.getNode(itemId)?.expandable, [instance]);\n  const toggleNodeExpansion = useEventCallback((event, itemId) => {\n    if (itemId == null) {\n      return;\n    }\n    const isExpandedBefore = models.expandedItems.value.indexOf(itemId) !== -1;\n    let newExpanded;\n    if (isExpandedBefore) {\n      newExpanded = models.expandedItems.value.filter(id => id !== itemId);\n    } else {\n      newExpanded = [itemId].concat(models.expandedItems.value);\n    }\n    if (params.onItemExpansionToggle) {\n      params.onItemExpansionToggle(event, itemId, !isExpandedBefore);\n    }\n    setExpandedItems(event, newExpanded);\n  });\n  const expandAllSiblings = (event, itemId) => {\n    const node = instance.getNode(itemId);\n    const siblings = instance.getChildrenIds(node.parentId);\n    const diff = siblings.filter(child => instance.isNodeExpandable(child) && !instance.isNodeExpanded(child));\n    const newExpanded = models.expandedItems.value.concat(diff);\n    if (diff.length > 0) {\n      if (params.onItemExpansionToggle) {\n        diff.forEach(newlyExpandedItemId => {\n          params.onItemExpansionToggle(event, newlyExpandedItemId, true);\n        });\n      }\n      setExpandedItems(event, newExpanded);\n    }\n  };\n  populateInstance(instance, {\n    isNodeExpanded,\n    isNodeExpandable,\n    toggleNodeExpansion,\n    expandAllSiblings\n  });\n};\nuseTreeViewExpansion.models = {\n  expandedItems: {\n    getDefaultValue: params => params.defaultExpandedItems\n  }\n};\nconst DEFAULT_EXPANDED_NODES = [];\nuseTreeViewExpansion.getDefaultizedParams = params => _extends({}, params, {\n  defaultExpandedItems: params.defaultExpandedItems ?? DEFAULT_EXPANDED_NODES\n});\nuseTreeViewExpansion.params = {\n  expandedItems: true,\n  defaultExpandedItems: true,\n  onExpandedItemsChange: true,\n  onItemExpansionToggle: true\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}