{"ast":null,"code":"import * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport { populateInstance } from '../../useTreeView/useTreeView.utils';\nexport const useTreeViewId = ({\n  instance,\n  params\n}) => {\n  const treeId = useId(params.id);\n  const getTreeItemId = React.useCallback((itemId, idAttribute) => idAttribute ?? `${treeId}-${itemId}`, [treeId]);\n  populateInstance(instance, {\n    getTreeItemId\n  });\n  return {\n    getRootProps: () => ({\n      id: treeId\n    })\n  };\n};\nuseTreeViewId.params = {\n  id: true\n};","map":{"version":3,"names":["React","useId","populateInstance","useTreeViewId","instance","params","treeId","id","getTreeItemId","useCallback","itemId","idAttribute","getRootProps"],"sources":["/Users/xander/node_modules/@mui/x-tree-view/internals/plugins/useTreeViewId/useTreeViewId.js"],"sourcesContent":["import * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport { populateInstance } from '../../useTreeView/useTreeView.utils';\nexport const useTreeViewId = ({\n  instance,\n  params\n}) => {\n  const treeId = useId(params.id);\n  const getTreeItemId = React.useCallback((itemId, idAttribute) => idAttribute ?? `${treeId}-${itemId}`, [treeId]);\n  populateInstance(instance, {\n    getTreeItemId\n  });\n  return {\n    getRootProps: () => ({\n      id: treeId\n    })\n  };\n};\nuseTreeViewId.params = {\n  id: true\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAC5BC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,MAAM,GAAGL,KAAK,CAACI,MAAM,CAACE,EAAE,CAAC;EAC/B,MAAMC,aAAa,GAAGR,KAAK,CAACS,WAAW,CAAC,CAACC,MAAM,EAAEC,WAAW,KAAKA,WAAW,IAAK,GAAEL,MAAO,IAAGI,MAAO,EAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAChHJ,gBAAgB,CAACE,QAAQ,EAAE;IACzBI;EACF,CAAC,CAAC;EACF,OAAO;IACLI,YAAY,EAAEA,CAAA,MAAO;MACnBL,EAAE,EAAED;IACN,CAAC;EACH,CAAC;AACH,CAAC;AACDH,aAAa,CAACE,MAAM,GAAG;EACrBE,EAAE,EAAE;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}